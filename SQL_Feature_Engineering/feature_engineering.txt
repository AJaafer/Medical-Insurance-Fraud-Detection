---------------------------------------------------------------------------------------------------
-- 1. 各条目的统计特征
---------------------------------------------------------------------------------------------------
--drop table if exists feat_items_train;
create table if not exists feat_items_train as select
    pid,
	sum(yp_occur) as sum_yp_occur, avg(yp_occur) as avg_yp_occur, median(yp_occur) as mid_yp_occur,stddev(yp_occur) as std_yp_occur, max(yp_occur) as max_yp_occur,
	sum(gzyp_occur) as sum_gzyp_occur, avg(gzyp_occur) as avg_gzyp_occur, median(gzyp_occur) as mid_gzyp_occur,stddev(gzyp_occur) as std_gzyp_occur, max(gzyp_occur) as max_gzyp_occur,
	sum(gcy_occur) as sum_gcy_occur, avg(gcy_occur) as avg_gcy_occur, median(gcy_occur) as mid_gcy_occur,stddev(gcy_occur) as std_gcy_occur, max(gcy_occur) as max_gcy_occur,
	sum(zcy_occur) as sum_zcy_occur, avg(zcy_occur) as avg_zcy_occur, median(zcy_occur) as mid_zcy_occur,stddev(zcy_occur) as std_zcy_occur, max(zcy_occur) as max_zcy_occur,
	sum(yp_self) as sum_yp_self, avg(yp_self) as avg_yp_self, median(yp_self) as mid_yp_self,stddev(yp_self) as std_yp_self, max(yp_self) as max_yp_self,
	sum(yp_refuse) as sum_yp_refuse, avg(yp_refuse) as avg_yp_refuse, median(yp_refuse) as mid_yp_refuse,stddev(yp_refuse) as std_yp_refuse, max(yp_refuse) as max_yp_refuse,
	sum(yp_declare) as sum_yp_declare, avg(yp_declare) as avg_yp_declare, median(yp_declare) as mid_yp_declare,stddev(yp_declare) as std_yp_declare, max(yp_declare) as max_yp_declare,
	sum(jc_occur) as sum_jc_occur, avg(jc_occur) as avg_jc_occur, median(jc_occur) as mid_jc_occur,stddev(jc_occur) as std_jc_occur, max(jc_occur) as max_jc_occur,
	sum(gzjc_occur) as sum_gzjc_occur, avg(gzjc_occur) as avg_gzjc_occur, median(gzjc_occur) as mid_gzjc_occur,stddev(gzjc_occur) as std_gzjc_occur, max(gzjc_occur) as max_gzjc_occur,
	sum(jc_self) as sum_jc_self, avg(jc_self) as avg_jc_self, median(jc_self) as mid_jc_self,stddev(jc_self) as std_jc_self, max(jc_self) as max_jc_self,
	sum(jc_declare) as sum_jc_declare, avg(jc_declare) as avg_jc_declare, median(jc_declare) as mid_jc_declare,stddev(jc_declare) as std_jc_declare, max(jc_declare) as max_jc_declare,
	sum(zl_occur) as sum_zl_occur, avg(zl_occur) as avg_zl_occur, median(zl_occur) as mid_zl_occur,stddev(zl_occur) as std_zl_occur, max(zl_occur) as max_zl_occur,
	sum(zl_self) as sum_zl_self, avg(zl_self) as avg_zl_self, median(zl_self) as mid_zl_self,stddev(zl_self) as std_zl_self, max(zl_self) as max_zl_self,
	sum(zl_declare) as sum_zl_declare, avg(zl_declare) as avg_zl_declare, median(zl_declare) as mid_zl_declare,stddev(zl_declare) as std_zl_declare, max(zl_declare) as max_zl_declare,
	sum(ss_occur) as sum_ss_occur, avg(ss_occur) as avg_ss_occur, median(ss_occur) as mid_ss_occur,stddev(ss_occur) as std_ss_occur, max(ss_occur) as max_ss_occur,
	sum(ss_self) as sum_ss_self, avg(ss_self) as avg_ss_self, median(ss_self) as mid_ss_self,stddev(ss_self) as std_ss_self, max(ss_self) as max_ss_self,
	sum(ss_declare) as sum_ss_declare, avg(ss_declare) as avg_ss_declare, median(ss_declare) as mid_ss_declare,stddev(ss_declare) as std_ss_declare, max(ss_declare) as max_ss_declare,
	sum(cw_occur) as sum_cw_occur, avg(cw_occur) as avg_cw_occur, median(cw_occur) as mid_cw_occur,stddev(cw_occur) as std_cw_occur, max(cw_occur) as max_cw_occur,
	sum(cw_declare) as sum_cw_declare, avg(cw_declare) as avg_cw_declare, median(cw_declare) as mid_cw_declare,stddev(cw_declare) as std_cw_declare, max(cw_declare) as max_cw_declare,
	sum(yycl_occur) as sum_yycl_occur, avg(yycl_occur) as avg_yycl_occur, median(yycl_occur) as mid_yycl_occur,stddev(yycl_occur) as std_yycl_occur, max(yycl_occur) as max_yycl_occur,
	sum(gjcl_occur) as sum_gjcl_occur, avg(gjcl_occur) as avg_gjcl_occur, median(gjcl_occur) as mid_gjcl_occur,stddev(gjcl_occur) as std_gjcl_occur, max(gjcl_occur) as max_gjcl_occur,
	sum(yycl_self) as sum_yycl_self, avg(yycl_self) as avg_yycl_self, median(yycl_self) as mid_yycl_self,stddev(yycl_self) as std_yycl_self, max(yycl_self) as max_yycl_self,
	sum(sqx_declare) as sum_sqx_declare, avg(sqx_declare) as avg_sqx_declare, median(sqx_declare) as mid_sqx_declare,stddev(sqx_declare) as std_sqx_declare, max(sqx_declare) as max_sqx_declare,
	sum(cfsx_declare) as sum_cfsx_declare, avg(cfsx_declare) as avg_cfsx_declare, median(cfsx_declare) as mid_cfsx_declare,stddev(cfsx_declare) as std_cfsx_declare, max(cfsx_declare) as max_cfsx_declare,
	sum(qt_occure) as sum_qt_occure, avg(qt_occure) as avg_qt_occure, median(qt_occure) as mid_qt_occure,stddev(qt_occure) as std_qt_occure, max(qt_occure) as max_qt_occure,
	sum(qt_declare) as sum_qt_declare, avg(qt_declare) as avg_qt_declare, median(qt_declare) as mid_qt_declare,stddev(qt_declare) as std_qt_declare, max(qt_declare) as max_qt_declare,
	sum(ycx_declare) as sum_ycx_declare, avg(ycx_declare) as avg_ycx_declare, median(ycx_declare) as mid_ycx_declare,stddev(ycx_declare) as std_ycx_declare, max(ycx_declare) as max_ycx_declare,
	sum(sqx_self) as sum_sqx_self, avg(sqx_self) as avg_sqx_self, median(sqx_self) as mid_sqx_self,stddev(sqx_self) as std_sqx_self, max(sqx_self) as max_sqx_self,
	sum(std_pay) as sum_std_pay, avg(std_pay) as avg_std_pay, median(std_pay) as mid_std_pay,stddev(std_pay) as std_std_pay, max(std_pay) as max_std_pay,
	sum(self_over_std) as sum_self_over_std, avg(self_over_std) as avg_self_over_std, median(self_over_std) as mid_self_over_std,stddev(self_over_std) as std_self_over_std, max(self_over_std) as max_self_over_std,
	sum(med_assist) as sum_med_assist, avg(med_assist) as avg_med_assist, median(med_assist) as mid_med_assist,stddev(med_assist) as std_med_assist, max(med_assist) as max_med_assist,
	sum(over_upper_limit) as sum_over_upper_limit, avg(over_upper_limit) as avg_over_upper_limit, median(over_upper_limit) as mid_over_upper_limit,stddev(over_upper_limit) as std_over_upper_limit, max(over_upper_limit) as max_over_upper_limit,
	sum(med_insurance) as sum_med_insurance, avg(med_insurance) as avg_med_insurance, median(med_insurance) as mid_med_insurance,stddev(med_insurance) as std_med_insurance, max(med_insurance) as max_med_insurance,
	sum(servant_assist) as sum_servant_assist, avg(servant_assist) as avg_servant_assist, median(servant_assist) as mid_servant_assist,stddev(servant_assist) as std_servant_assist, max(servant_assist) as max_servant_assist,
	sum(rural_assist) as sum_rural_assist, avg(rural_assist) as avg_rural_assist, median(rural_assist) as mid_rural_assist,stddev(rural_assist) as std_rural_assist, max(rural_assist) as max_rural_assist,
	sum(available) as sum_available, avg(available) as avg_available, median(available) as mid_available,stddev(available) as std_available, max(available) as max_available,
	sum(personal_med_insurance) as sum_personal_med_insurance, avg(personal_med_insurance) as avg_personal_med_insurance, median(personal_med_insurance) as mid_personal_med_insurance,stddev(personal_med_insurance) as std_personal_med_insurance, max(personal_med_insurance) as max_personal_med_insurance,
	sum(non_account) as sum_non_account, avg(non_account) as avg_non_account, median(non_account) as mid_non_account,stddev(non_account) as std_non_account, max(non_account) as max_non_account,
	sum(approve) as sum_approve, avg(approve) as avg_approve, median(approve) as mid_approve,stddev(approve) as std_approve, max(approve) as max_approve,
	sum(assist_approve) as sum_assist_approve, avg(assist_approve) as avg_assist_approve, median(assist_approve) as mid_assist_approve,stddev(assist_approve) as std_assist_approve, max(assist_approve) as max_assist_approve,
	sum(med_assist_declare) as sum_med_assist_declare, avg(med_assist_declare) as avg_med_assist_declare, median(med_assist_declare) as mid_med_assist_declare,stddev(med_assist_declare) as std_med_assist_declare, max(med_assist_declare) as max_med_assist_declare,
	sum(disable_med_assist) as sum_disable_med_assist, avg(disable_med_assist) as avg_disable_med_assist, median(disable_med_assist) as mid_disable_med_assist,stddev(disable_med_assist) as std_disable_med_assist, max(disable_med_assist) as max_disable_med_assist,
	sum(gov_med_assist) as sum_gov_med_assist, avg(gov_med_assist) as avg_gov_med_assist, median(gov_med_assist) as mid_gov_med_assist,stddev(gov_med_assist) as std_gov_med_assist, max(gov_med_assist) as max_gov_med_assist,
	sum(rural_assist2) as sum_rural_assist2, avg(rural_assist2) as avg_rural_assist2, median(rural_assist2) as mid_rural_assist2,stddev(rural_assist2) as std_rural_assist2, max(rural_assist2) as max_rural_assist2
from df_train group by pid;

-- 这些列缺失都需要用0填充，以表示没有？还是用均值填充，以表示缺失没有倾向性？需要查看一下target
-- 用0填充吧！！把有与没有区分开来！！即可！均值都可以试一下！！
-- select * from feat_items_train  limit 10;
-- select mid_servant_assist from  feat_items_train where mid_servant_assist is not null;

-- 联结label
--drop table if exists feat_items_target_train;
create table if not exists feat_items_target_train as select a.*, b.label 
from renshe_df_id_train b left outer join feat_items_train a
on b.pid = a.pid;

-- 新特征
--drop table if exists feat_itemsfee_train;
create table if not exists feat_itemsfee_train as select
	pid as itemsfee_pid,
	(sum_yp_occur + sum_gzyp_occur + sum_gcy_occur + sum_zcy_occur + sum_jc_occur + sum_gzjc_occur + sum_cw_occur + sum_ss_occur + sum_zl_occur +sum_yycl_occur +sum_gjcl_occur+ sum_qt_occure) as fee_fasheng_sum,
	(sum_yp_occur + sum_gzyp_occur + sum_gcy_occur + sum_zcy_occur + sum_jc_occur + sum_gzjc_occur + sum_cw_occur + sum_ss_occur + sum_zl_occur +sum_yycl_occur +sum_gjcl_occur+ sum_qt_occure)/12 as fee_fasheng_mean,
	(sum_yp_self + sum_jc_self +sum_zl_self +sum_ss_self +sum_yycl_self+ sum_sqx_self) as fee_zifei_sum,
	(sum_yp_self + sum_jc_self +sum_zl_self +sum_ss_self +sum_yycl_self+ sum_sqx_self)/6 as fee_zifei_mean,
	(sum_yp_declare +sum_jc_declare +sum_zl_declare+  sum_ss_declare+ sum_cw_declare+ sum_sqx_declare+ sum_cfsx_declare +sum_qt_declare+ sum_ycx_declare + sum_med_assist_declare) as fee_shengbao_sum,
	(sum_yp_declare +sum_jc_declare +sum_zl_declare+  sum_ss_declare+ sum_cw_declare+ sum_sqx_declare+ sum_cfsx_declare +sum_qt_declare+ sum_ycx_declare + sum_med_assist_declare)/10 as fee_shengbao_mean,
	(sum_med_assist +sum_servant_assist+ sum_rural_assist +sum_gov_med_assist+ sum_rural_assist2) as fee_buzhu_sum,
	(sum_med_assist +sum_servant_assist+ sum_rural_assist +sum_gov_med_assist+ sum_rural_assist2)/5 as fee_buzhu_mean,
	((sum_yp_occur + sum_gzyp_occur + sum_gcy_occur + sum_zcy_occur + sum_jc_occur + sum_gzjc_occur + sum_cw_occur + sum_ss_occur + sum_zl_occur +sum_yycl_occur +sum_gjcl_occur+ sum_qt_occure)-(sum_yp_declare +sum_jc_declare +sum_zl_declare+  sum_ss_declare+ sum_cw_declare+ sum_sqx_declare+ sum_cfsx_declare +sum_qt_declare+ sum_ycx_declare + sum_med_assist_declare)) as fee_fasheng_shengbao
	
from feat_items_train;

--select * from feat_itemsfee_train limit 10;
---------------------------------------------------------------------------------------------
-- 2. 行为特征
---------------------------------------------------------------------------------------------
-- 1).去医院的日期特征-工作日
--drop table if exists feat_tohid_weekday;
create table if not exists feat_tohid_weekday as
select
	to_hid.pid as tohid_pid,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=0 then 1 else 0 end) as to_mon,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=1 then 1 else 0 end) as to_tue,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=2 then 1 else 0 end) as to_wen,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=3 then 1 else 0 end) as to_thu,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=4 then 1 else 0 end) as to_fri,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=5 then 1 else 0 end) as to_sat,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=6 then 1 else 0 end) as to_sun
from 
	(select distinct pid, hid, trans_time from df_train) to_hid
group by to_hid.pid;

-- 2).去医院交易日期特征-工作日
--drop table if exists feat_transhid_weekday;
create table if not exists feat_transhid_weekday as
select
	pid as transhid_pid,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=0 then 1 else 0 end) as trans_mon,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=1 then 1 else 0 end) as trans_tue,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=2 then 1 else 0 end) as trans_wen,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=3 then 1 else 0 end) as trans_thu,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=4 then 1 else 0 end) as trans_fri,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=5 then 1 else 0 end) as trans_sat,
	sum(case when weekday(to_date(trans_time,"yyyy-mm-dd"))=6 then 1 else 0 end) as trans_sun
from df_train group by pid;

-- 3) 去医院和在医院交易的统计行为特征
--drop table if exists feat_statbehavior_train;
create table if not exists feat_statbehavior_train as
select pid as statbehavior_pid,
	count(distinct hid) as cnt_diff_hid,  -- 去不同医院的次数
	count(trans_time) as cnt_trans_hid, -- 交易总次数
	count(distinct trans_time) as cnt_tohid,  -- 不再同一天交易的次数（去医院的次数）
	datediff(max(to_date(trans_time,"yyyy-mm-dd")),min(to_date(trans_time,"yyyy-mm-dd")),"dd")/count(trans_time) as rate_trans, --交易频度
	datediff(max(to_date(trans_time,"yyyy-mm-dd")),min(to_date(trans_time,"yyyy-mm-dd")),"dd") as total_peroid, --就医时间总跨度
	datediff(max(to_date(trans_time,"yyyy-mm-dd")),min(to_date(trans_time,"yyyy-mm-dd")),"dd")/count(distinct trans_time) as avg_period_tohid --就医平均时间间隔
from df_train group by pid;

-- 4) 交易行为统计
--drop table if exists feat_trans_stat_train;
create table if not exists feat_trans_stat_train as
select a.pid as trans_stat_pid,
	avg(day_trans) as avg_trans_hid,
	median(day_trans) as mid_trans_hid,
	max(day_trans) as max_trans_hid
	from (select pid, trans_time, count(*) as day_trans from df_train group by pid, trans_time) a
group by a.pid;

---------------------------------------------------------------------------------------------
-- 3. 三目统计
---------------------------------------------------------------------------------------------
--drop table if exists feat_smstat_train;
create table if not exists feat_smstat_train as
select pid smstat_pid,
	sum(price*amount) as sum_fee_cost,		-- 一个记录的总花费
	avg(price*amount) as avg_fee_cost,		-- 一个记录的平均花费
	median(price*amount) as mid_fee_cost,
	sum(amount) as sum_fee_amount, 
	sum(sm_stat) as sum_sm_stat, 
	avg(amount) as avg_fee_amount,
	avg(sm_stat) as avg_sm_stat, 
	avg(price) as avg_fee_price,
	max(amount) as max_fee_amount,
	max(sm_stat) as max_sm_stat, 
	max(price) as max_fee_price
from df_train group by pid;

---------------------------------------------------------------------------------------------
-- 4. 三目服务项目
---------------------------------------------------------------------------------------------
--drop table if exists feat_smitems_train;
create table if not exists feat_smitems_train as 
select pid as smitems_pid,
	sum(case when (sm_proj_name regexp "一次性连轴式止血带（压力绷带）2 0 35CM" or sm_hos_proj_name regexp "一次性连轴式止血带（压力绷带）2 0 35CM") then 1 else 0 end) as service_type_1,
	sum(case when (sm_proj_name regexp "三级医院" or sm_hos_proj_name regexp "三级医院") then 1 else 0 end) as service_type_2,
	sum(case when (sm_proj_name regexp "丙肝抗体（酶免法）" or sm_hos_proj_name regexp "丙肝抗体（酶免法）") then 1 else 0 end) as service_type_3,
	sum(case when (sm_proj_name regexp "丹芪偏瘫胶囊" or sm_hos_proj_name regexp "丹芪偏瘫胶囊") then 1 else 0 end) as service_type_4,
	sum(case when (sm_proj_name regexp "主任医师挂号费" or sm_hos_proj_name regexp "主任医师挂号费") then 1 else 0 end) as service_type_5,
	sum(case when (sm_proj_name regexp "乙型肝炎e抗体测定" or sm_hos_proj_name regexp "乙型肝炎e抗体测定") then 1 else 0 end) as service_type_6,
	sum(case when (sm_proj_name regexp "乙型肝炎e抗原测定" or sm_hos_proj_name regexp "乙型肝炎e抗原测定") then 1 else 0 end) as service_type_7,
	sum(case when (sm_proj_name regexp "乙型肝炎核心抗体测定" or sm_hos_proj_name regexp "乙型肝炎核心抗体测定") then 1 else 0 end) as service_type_8,
	sum(case when (sm_proj_name regexp "乙型肝炎表面抗体测定" or sm_hos_proj_name regexp "乙型肝炎表面抗体测定") then 1 else 0 end) as service_type_9,
	sum(case when (sm_proj_name regexp "乙型肝炎表面抗原测定" or sm_hos_proj_name regexp "乙型肝炎表面抗原测定") then 1 else 0 end) as service_type_10,
	sum(case when (sm_proj_name regexp "乙肝e抗体（免疫）" or sm_hos_proj_name regexp "乙肝e抗体（免疫）") then 1 else 0 end) as service_type_11,
	sum(case when (sm_proj_name regexp "乙肝e抗原（免疫）" or sm_hos_proj_name regexp "乙肝e抗原（免疫）") then 1 else 0 end) as service_type_12,
	sum(case when (sm_proj_name regexp "乙肝核心抗体" or sm_hos_proj_name regexp "乙肝核心抗体") then 1 else 0 end) as service_type_13,
	sum(case when (sm_proj_name regexp "乙肝表面抗体（免疫）" or sm_hos_proj_name regexp "乙肝表面抗体（免疫）") then 1 else 0 end) as service_type_14,
	sum(case when (sm_proj_name regexp "乙肝表面抗原（免疫）" or sm_hos_proj_name regexp "乙肝表面抗原（免疫）") then 1 else 0 end) as service_type_15,
	sum(case when (sm_proj_name regexp "低分子肝素钠注射液" or sm_hos_proj_name regexp "低分子肝素钠注射液") then 1 else 0 end) as service_type_16,
	sum(case when (sm_proj_name regexp "低分子量肝素钙注射液" or sm_hos_proj_name regexp "低分子量肝素钙注射液") then 1 else 0 end) as service_type_17,
	sum(case when (sm_proj_name regexp "低分子量肝素钠注射液" or sm_hos_proj_name regexp "低分子量肝素钠注射液") then 1 else 0 end) as service_type_18,
	sum(case when (sm_proj_name regexp "依诺肝素钠注射液" or sm_hos_proj_name regexp "依诺肝素钠注射液") then 1 else 0 end) as service_type_19,
	sum(case when (sm_proj_name regexp "副主任医师挂号费" or sm_hos_proj_name regexp "副主任医师挂号费") then 1 else 0 end) as service_type_20,
	sum(case when (sm_proj_name regexp "参松养心胶囊" or sm_hos_proj_name regexp "参松养心胶囊") then 1 else 0 end) as service_type_21,
	sum(case when (sm_proj_name regexp "地奥心血康软胶囊" or sm_hos_proj_name regexp "地奥心血康软胶囊") then 1 else 0 end) as service_type_22,
	sum(case when (sm_proj_name regexp "多导心电图" or sm_hos_proj_name regexp "多导心电图") then 1 else 0 end) as service_type_23,
	sum(case when (sm_proj_name regexp "多导心电图检查自动分析" or sm_hos_proj_name regexp "多导心电图检查自动分析") then 1 else 0 end) as service_type_24,
	sum(case when (sm_proj_name regexp "尿沉渣离心显微镜检查（门特）" or sm_hos_proj_name regexp "尿沉渣离心显微镜检查（门特）") then 1 else 0 end) as service_type_25,
	sum(case when (sm_proj_name regexp "注射用低分子量肝素钠" or sm_hos_proj_name regexp "注射用低分子量肝素钠") then 1 else 0 end) as service_type_28,
	sum(case when (sm_proj_name regexp "清肺消炎丸" or sm_hos_proj_name regexp "清肺消炎丸") then 1 else 0 end) as service_type_29,
	sum(case when (sm_proj_name regexp "牛黄清心丸" or sm_hos_proj_name regexp "牛黄清心丸") then 1 else 0 end) as service_type_30,
	sum(case when (sm_proj_name regexp "病床紫外线消毒" or sm_hos_proj_name regexp "病床紫外线消毒") then 1 else 0 end) as service_type_31,
	sum(case when (sm_proj_name regexp "癌胚抗原（微粒子化学发光法）" or sm_hos_proj_name regexp "癌胚抗原（微粒子化学发光法）") then 1 else 0 end) as service_type_32,
	sum(case when (sm_proj_name regexp "癌胚抗原（电化学发光法）" or sm_hos_proj_name regexp "癌胚抗原（电化学发光法）") then 1 else 0 end) as service_type_33,
	sum(case when (sm_proj_name regexp "稳心颗粒" or sm_hos_proj_name regexp "稳心颗粒") then 1 else 0 end) as service_type_34,
	sum(case when (sm_proj_name regexp "糖尿病门诊诊察费（门特加收）" or sm_hos_proj_name regexp "糖尿病门诊诊察费（门特加收）") then 1 else 0 end) as service_type_35,
	sum(case when (sm_proj_name regexp "肝功能及肝血流测定" or sm_hos_proj_name regexp "肝功能及肝血流测定") then 1 else 0 end) as service_type_36,
	sum(case when (sm_proj_name regexp "肝素钠注射液" or sm_hos_proj_name regexp "肝素钠注射液") then 1 else 0 end) as service_type_37,
	sum(case when (sm_proj_name regexp "肺力咳合剂" or sm_hos_proj_name regexp "肺力咳合剂") then 1 else 0 end) as service_type_38,
	sum(case when (sm_proj_name regexp "肺力咳胶囊" or sm_hos_proj_name regexp "肺力咳胶囊") then 1 else 0 end) as service_type_39,
	sum(case when (sm_proj_name regexp "肾小球滤过率（肌酐）" or sm_hos_proj_name regexp "肾小球滤过率（肌酐）") then 1 else 0 end) as service_type_40,
	sum(case when (sm_proj_name regexp "肾炎康复片" or sm_hos_proj_name regexp "肾炎康复片") then 1 else 0 end) as service_type_41,
	sum(case when (sm_proj_name regexp "脑心通胶囊" or sm_hos_proj_name regexp "脑心通胶囊") then 1 else 0 end) as service_type_42,
	sum(case when (sm_proj_name regexp "莲子心" or sm_hos_proj_name regexp "莲子心") then 1 else 0 end) as service_type_43,
	sum(case when (sm_proj_name regexp "血栓心脉宁片" or sm_hos_proj_name regexp "血栓心脉宁片") then 1 else 0 end) as service_type_44,
	sum(case when (sm_proj_name regexp "负压采血管" or sm_hos_proj_name regexp "负压采血管") then 1 else 0 end) as service_type_45,
	sum(case when (sm_proj_name regexp "通心络胶囊" or sm_hos_proj_name regexp "通心络胶囊") then 1 else 0 end) as service_type_46,
	sum(case when (sm_proj_name regexp "通脉养心丸" or sm_hos_proj_name regexp "通脉养心丸") then 1 else 0 end) as service_type_47,
	sum(case when (sm_proj_name regexp "速效救心丸" or sm_hos_proj_name regexp "速效救心丸") then 1 else 0 end) as service_type_48,
	sum(case when (sm_proj_name regexp "高压注射针筒 200" or sm_hos_proj_name regexp "高压注射针筒 200") then 1 else 0 end) as service_type_49,
	sum(case when (sm_proj_name regexp "鳞状细胞癌相关抗原测定（scc）" or sm_hos_proj_name regexp "鳞状细胞癌相关抗原测定（scc）") then 1 else 0 end) as service_type_50,
	sum(case when (sm_proj_name regexp "麝香保心丸" or sm_hos_proj_name regexp "麝香保心丸") then 1 else 0 end) as service_type_51,
	sum(case when (sm_proj_name regexp "挂号" or sm_hos_proj_name regexp "挂号" and sm_proj_name not regexp "门特挂号" and sm_hos_proj_name not regexp "门特挂号") then 1 else 0 end) as service_type_26,
	sum(case when (sm_proj_name is null and sm_hos_proj_name is null) then 1 else 0 end) as service_unknown,           -- 未知的总数
	avg(case when (sm_proj_name is null and sm_hos_proj_name is null) then 1 else 0 end) as service_unknown_known     -- 未知的比例（当全为未知时，其为1，当全为知时，其为0，这样就把，未知与已知标识开来！！）
from df_train group by pid;	

---------------------------------------------------------------------------------------------
-- 5. 去医院次数及在医院交易频次
---------------------------------------------------------------------------------------------
-- 1）去各个医院的次数
--drop table if exists feat_tohid_train;
create table if not exists feat_tohid_train as
select a.pid as e_tohid_pid,
	sum(case when hid=102 then 1 else 0 end) as to_hid_102,
	sum(case when hid=104 then 1 else 0 end) as to_hid_104,
	sum(case when hid=1058 then 1 else 0 end) as to_hid_1058,
	sum(case when hid=1068 then 1 else 0 end) as to_hid_1068,
	sum(case when hid=1072 then 1 else 0 end) as to_hid_1072,
	sum(case when hid=1079 then 1 else 0 end) as to_hid_1079,
	sum(case when hid=111 then 1 else 0 end) as to_hid_111,
	sum(case when hid=115 then 1 else 0 end) as to_hid_115,
	sum(case when hid=122 then 1 else 0 end) as to_hid_122,
	sum(case when hid=125 then 1 else 0 end) as to_hid_125,
	sum(case when hid=1254 then 1 else 0 end) as to_hid_1254,
	sum(case when hid=126 then 1 else 0 end) as to_hid_126,
	sum(case when hid=127 then 1 else 0 end) as to_hid_127,
	sum(case when hid=135 then 1 else 0 end) as to_hid_135,
	sum(case when hid=136 then 1 else 0 end) as to_hid_136,
	sum(case when hid=139 then 1 else 0 end) as to_hid_139,
	sum(case when hid=140 then 1 else 0 end) as to_hid_140,
	sum(case when hid=141 then 1 else 0 end) as to_hid_141,
	sum(case when hid=143 then 1 else 0 end) as to_hid_143,
	sum(case when hid=1431 then 1 else 0 end) as to_hid_1431,
	sum(case when hid=145 then 1 else 0 end) as to_hid_145,
	sum(case when hid=149 then 1 else 0 end) as to_hid_149,
	sum(case when hid=150 then 1 else 0 end) as to_hid_150,
	sum(case when hid=153 then 1 else 0 end) as to_hid_153,
	sum(case when hid=154 then 1 else 0 end) as to_hid_154,
	sum(case when hid=159 then 1 else 0 end) as to_hid_159,
	sum(case when hid=160 then 1 else 0 end) as to_hid_160,
	sum(case when hid=161 then 1 else 0 end) as to_hid_161,
	sum(case when hid=170 then 1 else 0 end) as to_hid_170,
	sum(case when hid=173 then 1 else 0 end) as to_hid_173,
	sum(case when hid=177 then 1 else 0 end) as to_hid_177,
	sum(case when hid=178 then 1 else 0 end) as to_hid_178,
	sum(case when hid=180 then 1 else 0 end) as to_hid_180,
	sum(case when hid=182 then 1 else 0 end) as to_hid_182,
	sum(case when hid=183 then 1 else 0 end) as to_hid_183,
	sum(case when hid=184 then 1 else 0 end) as to_hid_184,
	sum(case when hid=185 then 1 else 0 end) as to_hid_185,
	sum(case when hid=188 then 1 else 0 end) as to_hid_188,
	sum(case when hid=189 then 1 else 0 end) as to_hid_189,
	sum(case when hid=190 then 1 else 0 end) as to_hid_190,
	sum(case when hid=192 then 1 else 0 end) as to_hid_192,
	sum(case when hid=193 then 1 else 0 end) as to_hid_193,
	sum(case when hid=194 then 1 else 0 end) as to_hid_194,
	sum(case when hid=195 then 1 else 0 end) as to_hid_195,
	sum(case when hid=196 then 1 else 0 end) as to_hid_196,
	sum(case when hid=197 then 1 else 0 end) as to_hid_197,
	sum(case when hid=201 then 1 else 0 end) as to_hid_201,
	sum(case when hid=24 then 1 else 0 end) as to_hid_24,
	sum(case when hid=30 then 1 else 0 end) as to_hid_30,
	sum(case when hid=32 then 1 else 0 end) as to_hid_32,
	sum(case when hid=34 then 1 else 0 end) as to_hid_34,
	sum(case when hid=42 then 1 else 0 end) as to_hid_42,
	sum(case when hid=43 then 1 else 0 end) as to_hid_43,
	sum(case when hid=44 then 1 else 0 end) as to_hid_44,
	sum(case when hid=444 then 1 else 0 end) as to_hid_444,
	sum(case when hid=449 then 1 else 0 end) as to_hid_449,
	sum(case when hid=482 then 1 else 0 end) as to_hid_482,
	sum(case when hid=5 then 1 else 0 end) as to_hid_5,
	sum(case when hid=51 then 1 else 0 end) as to_hid_51,
	sum(case when hid=558 then 1 else 0 end) as to_hid_558,
	sum(case when hid=559 then 1 else 0 end) as to_hid_559,
	sum(case when hid=567 then 1 else 0 end) as to_hid_567,
	sum(case when hid=569 then 1 else 0 end) as to_hid_569,
	sum(case when hid=571 then 1 else 0 end) as to_hid_571,
	sum(case when hid=587 then 1 else 0 end) as to_hid_587,
	sum(case when hid=596 then 1 else 0 end) as to_hid_596,
	sum(case when hid=626 then 1 else 0 end) as to_hid_626,
	sum(case when hid=65 then 1 else 0 end) as to_hid_65,
	sum(case when hid=69 then 1 else 0 end) as to_hid_69,
	sum(case when hid=7 then 1 else 0 end) as to_hid_7,
	sum(case when hid=723 then 1 else 0 end) as to_hid_723,
	sum(case when hid=74 then 1 else 0 end) as to_hid_74,
	sum(case when hid=76 then 1 else 0 end) as to_hid_76,
	sum(case when hid=766 then 1 else 0 end) as to_hid_766,
	sum(case when hid=77 then 1 else 0 end) as to_hid_77,
	sum(case when hid=896 then 1 else 0 end) as to_hid_896,
	sum(case when hid=934 then 1 else 0 end) as to_hid_934,
	sum(case when hid=98 then 1 else 0 end) as to_hid_98	
from 
	(select distinct pid,hid,trans_time from df_train) a 
group by a.pid;

-- 2）在各个医院交易频次
--drop table if exists feat_trans_hid;
create table if not exists feat_trans_hid as 
select pid as e_transhid_pid,
	sum(case when hid=102 then 1 else 0 end) as trans_hid_102,
	sum(case when hid=104 then 1 else 0 end) as trans_hid_104,
	sum(case when hid=105 then 1 else 0 end) as trans_hid_105,
	sum(case when hid=1058 then 1 else 0 end) as trans_hid_1058,
	sum(case when hid=1068 then 1 else 0 end) as trans_hid_1068,
	sum(case when hid=107 then 1 else 0 end) as trans_hid_107,
	sum(case when hid=1072 then 1 else 0 end) as trans_hid_1072,
	sum(case when hid=1079 then 1 else 0 end) as trans_hid_1079,
	sum(case when hid=110 then 1 else 0 end) as trans_hid_110,
	sum(case when hid=111 then 1 else 0 end) as trans_hid_111,
	sum(case when hid=1129 then 1 else 0 end) as trans_hid_1129,
	sum(case when hid=115 then 1 else 0 end) as trans_hid_115,
	sum(case when hid=122 then 1 else 0 end) as trans_hid_122,
	sum(case when hid=125 then 1 else 0 end) as trans_hid_125,
	sum(case when hid=1254 then 1 else 0 end) as trans_hid_1254,
	sum(case when hid=126 then 1 else 0 end) as trans_hid_126,
	sum(case when hid=127 then 1 else 0 end) as trans_hid_127,
	sum(case when hid=135 then 1 else 0 end) as trans_hid_135,
	sum(case when hid=136 then 1 else 0 end) as trans_hid_136,
	sum(case when hid=139 then 1 else 0 end) as trans_hid_139,
	sum(case when hid=140 then 1 else 0 end) as trans_hid_140,
	sum(case when hid=141 then 1 else 0 end) as trans_hid_141,
	sum(case when hid=143 then 1 else 0 end) as trans_hid_143,
	sum(case when hid=1431 then 1 else 0 end) as trans_hid_1431,
	sum(case when hid=144 then 1 else 0 end) as trans_hid_144,
	sum(case when hid=145 then 1 else 0 end) as trans_hid_145,
	sum(case when hid=1468 then 1 else 0 end) as trans_hid_1468,
	sum(case when hid=149 then 1 else 0 end) as trans_hid_149,
	sum(case when hid=150 then 1 else 0 end) as trans_hid_150,
	sum(case when hid=153 then 1 else 0 end) as trans_hid_153,
	sum(case when hid=154 then 1 else 0 end) as trans_hid_154,
	sum(case when hid=155 then 1 else 0 end) as trans_hid_155,
	sum(case when hid=158 then 1 else 0 end) as trans_hid_158,
	sum(case when hid=159 then 1 else 0 end) as trans_hid_159,
	sum(case when hid=160 then 1 else 0 end) as trans_hid_160,
	sum(case when hid=161 then 1 else 0 end) as trans_hid_161,
	sum(case when hid=170 then 1 else 0 end) as trans_hid_170,
	sum(case when hid=173 then 1 else 0 end) as trans_hid_173,
	sum(case when hid=177 then 1 else 0 end) as trans_hid_177,
	sum(case when hid=178 then 1 else 0 end) as trans_hid_178,
	sum(case when hid=180 then 1 else 0 end) as trans_hid_180,
	sum(case when hid=182 then 1 else 0 end) as trans_hid_182,
	sum(case when hid=183 then 1 else 0 end) as trans_hid_183,
	sum(case when hid=184 then 1 else 0 end) as trans_hid_184,
	sum(case when hid=185 then 1 else 0 end) as trans_hid_185,
	sum(case when hid=186 then 1 else 0 end) as trans_hid_186,
	sum(case when hid=188 then 1 else 0 end) as trans_hid_188,
	sum(case when hid=189 then 1 else 0 end) as trans_hid_189,
	sum(case when hid=190 then 1 else 0 end) as trans_hid_190,
	sum(case when hid=192 then 1 else 0 end) as trans_hid_192,
	sum(case when hid=193 then 1 else 0 end) as trans_hid_193,
	sum(case when hid=194 then 1 else 0 end) as trans_hid_194,
	sum(case when hid=195 then 1 else 0 end) as trans_hid_195,
	sum(case when hid=196 then 1 else 0 end) as trans_hid_196,
	sum(case when hid=197 then 1 else 0 end) as trans_hid_197,
	sum(case when hid=201 then 1 else 0 end) as trans_hid_201,
	sum(case when hid=24 then 1 else 0 end) as trans_hid_24,
	sum(case when hid=30 then 1 else 0 end) as trans_hid_30,
	sum(case when hid=32 then 1 else 0 end) as trans_hid_32,
	sum(case when hid=34 then 1 else 0 end) as trans_hid_34,
	sum(case when hid=42 then 1 else 0 end) as trans_hid_42,
	sum(case when hid=44 then 1 else 0 end) as trans_hid_44,
	sum(case when hid=444 then 1 else 0 end) as trans_hid_444,
	sum(case when hid=449 then 1 else 0 end) as trans_hid_449,
	sum(case when hid=482 then 1 else 0 end) as trans_hid_482,
	sum(case when hid=5 then 1 else 0 end) as trans_hid_5,
	sum(case when hid=558 then 1 else 0 end) as trans_hid_558,
	sum(case when hid=559 then 1 else 0 end) as trans_hid_559,
	sum(case when hid=567 then 1 else 0 end) as trans_hid_567,
	sum(case when hid=571 then 1 else 0 end) as trans_hid_571,
	sum(case when hid=587 then 1 else 0 end) as trans_hid_587,
	sum(case when hid=613 then 1 else 0 end) as trans_hid_613,
	sum(case when hid=626 then 1 else 0 end) as trans_hid_626,
	sum(case when hid=65 then 1 else 0 end) as trans_hid_65,
	sum(case when hid=69 then 1 else 0 end) as trans_hid_69,
	sum(case when hid=7 then 1 else 0 end) as trans_hid_7,
	sum(case when hid=704 then 1 else 0 end) as trans_hid_704,
	sum(case when hid=723 then 1 else 0 end) as trans_hid_723,
	sum(case when hid=74 then 1 else 0 end) as trans_hid_74,
	sum(case when hid=76 then 1 else 0 end) as trans_hid_76,
	sum(case when hid=77 then 1 else 0 end) as trans_hid_77,
	sum(case when hid=896 then 1 else 0 end) as trans_hid_896,
	sum(case when hid=934 then 1 else 0 end) as trans_hid_934,
	sum(case when hid=98 then 1 else 0 end) as trans_hid_98
from df_train group by pid;

---------------------------------------------------------------------------------------------
-- 6. 病种诊断统计信息
---------------------------------------------------------------------------------------------
--drop table if exists feat_disease_train;
create table if not exists feat_disease_train as
select pid as disease_pid,
	sum(case when disease regexp "不耐受" then 1 else 0 end) as disease_type_1,
	sum(case when disease regexp "中药止痛" then 1 else 0 end) as disease_type_2,
	sum(case when disease regexp "中风" then 1 else 0 end) as disease_type_3,
	sum(case when disease regexp "中风病" then 1 else 0 end) as disease_type_4,
	sum(case when disease regexp "乳腺恶性肿瘤" then 1 else 0 end) as disease_type_5,
	sum(case when disease regexp "乳腺癌" then 1 else 0 end) as disease_type_6,
	sum(case when disease regexp "伴有多个并发症的" then 1 else 0 end) as disease_type_7,
	sum(case when disease regexp "低蛋白血症" then 1 else 0 end) as disease_type_8,
	sum(case when disease regexp "偏瘫" then 1 else 0 end) as disease_type_9,
	sum(case when disease regexp "免疫力低下" then 1 else 0 end) as disease_type_10,
	sum(case when disease regexp "免疫功能低下" then 1 else 0 end) as disease_type_11,
	sum(case when disease regexp "免疫功能障碍" then 1 else 0 end) as disease_type_12,
	sum(case when disease regexp "冠心病" then 1 else 0 end) as disease_type_13,
	sum(case when disease regexp "冠状动脉性心脏病" then 1 else 0 end) as disease_type_14,
	sum(case when disease regexp "冠状动脉粥样硬化性心脏病" then 1 else 0 end) as disease_type_15,
	sum(case when disease regexp "动脉硬化性心脏病" then 1 else 0 end) as disease_type_16,
	sum(case when disease regexp "反复低血糖血糖不稳定" then 1 else 0 end) as disease_type_17,
	sum(case when disease regexp "反复发作低血糖" then 1 else 0 end) as disease_type_18,
	sum(case when disease regexp "否认癫痫" then 1 else 0 end) as disease_type_19,
	sum(case when disease regexp "否认药物过敏否认癫痫" then 1 else 0 end) as disease_type_20,
	sum(case when disease regexp "周围神经病" then 1 else 0 end) as disease_type_21,
	sum(case when disease regexp "周围血管神经病变" then 1 else 0 end) as disease_type_23,
	sum(case when disease regexp "哮喘" then 1 else 0 end) as disease_type_24,
	sum(case when disease regexp "型糖尿病" then 1 else 0 end) as disease_type_25,
	sum(case when disease regexp "型糖尿病反复严重低血糖" then 1 else 0 end) as disease_type_26,
	sum(case when disease regexp "型糖尿病性周围神经病" then 1 else 0 end) as disease_type_27,
	sum(case when disease regexp "型糖尿病性周围血管病" then 1 else 0 end) as disease_type_29,
	sum(case when disease regexp "型糖尿病性视网膜病变" then 1 else 0 end) as disease_type_30,
	sum(case when disease regexp "失眠" then 1 else 0 end) as disease_type_31,
	sum(case when disease regexp "尿毒症" then 1 else 0 end) as disease_type_32,
	sum(case when disease regexp "微循环障碍" then 1 else 0 end) as disease_type_33,
	sum(case when disease regexp "微血管病变" then 1 else 0 end) as disease_type_34,
	sum(case when disease regexp "心律失常" then 1 else 0 end) as disease_type_35,
	sum(case when disease regexp "心肌缺血" then 1 else 0 end) as disease_type_36,
	sum(case when disease regexp "恶性高血压" then 1 else 0 end) as disease_type_37,
	sum(case when disease regexp "慢性动脉闭塞症" then 1 else 0 end) as disease_type_38,
	sum(case when disease regexp "慢性支气管炎" then 1 else 0 end) as disease_type_39,
	sum(case when disease regexp "慢性支气管炎合并肺部感染" then 1 else 0 end) as disease_type_40,
	sum(case when disease regexp "慢性肺源性心脏病" then 1 else 0 end) as disease_type_41,
	sum(case when disease regexp "慢性肾功能不全" then 1 else 0 end) as disease_type_42,
	sum(case when disease regexp "慢性肾功能衰竭" then 1 else 0 end) as disease_type_43,
	sum(case when disease regexp "慢性肾衰" then 1 else 0 end) as disease_type_44,
	sum(case when disease regexp "慢性阻塞性肺疾病" then 1 else 0 end) as disease_type_46,
	sum(case when disease regexp "抑郁症" then 1 else 0 end) as disease_type_47,
	sum(case when (disease regexp "挂号" and disease not regexp "门特挂号") then 1 else 0 end) as disease_type_48,
	sum(case when disease regexp "支气管炎" then 1 else 0 end) as disease_type_49,
	sum(case when disease regexp "晚期乳腺癌" then 1 else 0 end) as disease_type_50,
	sum(case when disease regexp "有严重并发症的糖尿病" then 1 else 0 end) as disease_type_51,
	sum(case when disease regexp "气虚血瘀" then 1 else 0 end) as disease_type_53,
	sum(case when disease regexp "消化不良" then 1 else 0 end) as disease_type_54,
	sum(case when disease regexp "消渴" then 1 else 0 end) as disease_type_55,
	sum(case when disease regexp "消渴病" then 1 else 0 end) as disease_type_56,
	sum(case when disease regexp "癌性疼痛" then 1 else 0 end) as disease_type_57,
	sum(case when disease regexp "癌症放化疗" then 1 else 0 end) as disease_type_58,
	sum(case when disease regexp "白细胞减少症" then 1 else 0 end) as disease_type_59,
	sum(case when disease regexp "睡眠障碍" then 1 else 0 end) as disease_type_60,
	sum(case when disease regexp "精神病" then 1 else 0 end) as disease_type_61,
	sum(case when disease regexp "精神障碍" then 1 else 0 end) as disease_type_62,
	sum(case when disease regexp "糖尿病" then 1 else 0 end) as disease_type_63,
	sum(case when disease regexp "糖尿病伴周围循环并发症" then 1 else 0 end) as disease_type_64,
	sum(case when disease regexp "糖尿病伴神经并发症" then 1 else 0 end) as disease_type_65,
	sum(case when disease regexp "糖尿病合并冠心病" then 1 else 0 end) as disease_type_66,
	sum(case when disease regexp "糖尿病合并微循环障碍" then 1 else 0 end) as disease_type_67,
	sum(case when disease regexp "糖尿病合并微血管病变" then 1 else 0 end) as disease_type_68,
	sum(case when disease regexp "糖尿病合并肾病" then 1 else 0 end) as disease_type_69,
	sum(case when disease regexp "糖尿病周围神经病变" then 1 else 0 end) as disease_type_70,
	sum(case when disease regexp "糖尿病周围血管病变" then 1 else 0 end) as disease_type_71,
	sum(case when disease regexp "糖尿病并肾病变" then 1 else 0 end) as disease_type_72,
	sum(case when disease regexp "糖尿病微循环障碍" then 1 else 0 end) as disease_type_73,
	sum(case when disease regexp "糖尿病微血管病变" then 1 else 0 end) as disease_type_74,
	sum(case when disease regexp "糖尿病性冠心病" then 1 else 0 end) as disease_type_75,
	sum(case when disease regexp "糖尿病性周围神经病" then 1 else 0 end) as disease_type_76,
	sum(case when disease regexp "糖尿病性周围神经病变" then 1 else 0 end) as disease_type_77,
	sum(case when disease regexp "糖尿病性周围血管病" then 1 else 0 end) as disease_type_78,
	sum(case when disease regexp "糖尿病性周围血管病变" then 1 else 0 end) as disease_type_79,
	sum(case when disease regexp "糖尿病性心脏病" then 1 else 0 end) as disease_type_80,
	sum(case when disease regexp "糖尿病性神经病变" then 1 else 0 end) as disease_type_81,
	sum(case when disease regexp "糖尿病性肾病" then 1 else 0 end) as disease_type_82,
	sum(case when disease regexp "糖尿病性视网膜病" then 1 else 0 end) as disease_type_83,
	sum(case when disease regexp "糖尿病眼底病变" then 1 else 0 end) as disease_type_84,
	sum(case when disease regexp "糖尿病神经病变" then 1 else 0 end) as disease_type_85,
	sum(case when disease regexp "糖尿病糖尿病合并微循环障碍" then 1 else 0 end) as disease_type_86,
	sum(case when disease regexp "糖尿病糖尿病性周围血管病" then 1 else 0 end) as disease_type_87,
	sum(case when disease regexp "糖尿病糖尿病肾病" then 1 else 0 end) as disease_type_88,
	sum(case when disease regexp "糖尿病肾病" then 1 else 0 end) as disease_type_89,
	sum(case when disease regexp "糖尿病血糖不稳定" then 1 else 0 end) as disease_type_90,
	sum(case when disease regexp "糖尿病血糖不稳定的糖尿病患者" then 1 else 0 end) as disease_type_91,
	sum(case when disease regexp "糖尿病视网膜病" then 1 else 0 end) as disease_type_92,
	sum(case when disease regexp "糖尿病视网膜病变" then 1 else 0 end) as disease_type_93,
	sum(case when disease regexp "糖尿病视网膜眼底病变" then 1 else 0 end) as disease_type_94,
	sum(case when disease regexp "糖尿病足" then 1 else 0 end) as disease_type_95,
	sum(case when disease regexp "糖尿病门特" then 1 else 0 end) as disease_type_96,
	sum(case when disease regexp "细菌感染" then 1 else 0 end) as disease_type_97,
	sum(case when disease regexp "肝功能不全" then 1 else 0 end) as disease_type_98,
	sum(case when disease regexp "肝功能异常" then 1 else 0 end) as disease_type_99,
	sum(case when disease regexp "肝损害" then 1 else 0 end) as disease_type_100,
	sum(case when disease regexp "肺原性心脏病" then 1 else 0 end) as disease_type_101,
	sum(case when disease regexp "肺心病" then 1 else 0 end) as disease_type_102,
	sum(case when disease regexp "肺心病一线无效二线用药" then 1 else 0 end) as disease_type_103,
	sum(case when disease regexp "肺恶性肿瘤" then 1 else 0 end) as disease_type_104,
	sum(case when disease regexp "肺感染" then 1 else 0 end) as disease_type_105,
	sum(case when disease regexp "肺源性心脏病" then 1 else 0 end) as disease_type_106,
	sum(case when disease regexp "肺炎" then 1 else 0 end) as disease_type_107,
	sum(case when disease regexp "肺癌" then 1 else 0 end) as disease_type_108,
	sum(case when disease regexp "肺纤维化" then 1 else 0 end) as disease_type_109,
	sum(case when disease regexp "肾功能不全" then 1 else 0 end) as disease_type_110,
	sum(case when disease regexp "肾功能衰竭" then 1 else 0 end) as disease_type_111,
	sum(case when disease regexp "肾性贫血" then 1 else 0 end) as disease_type_112,
	sum(case when disease regexp "肾性骨病" then 1 else 0 end) as disease_type_113,
	sum(case when disease regexp "肾性高血压" then 1 else 0 end) as disease_type_114,
	sum(case when disease regexp "肾性高血压伴高血压性心脏病" then 1 else 0 end) as disease_type_115,
	sum(case when disease regexp "肾病" then 1 else 0 end) as disease_type_116,
	sum(case when disease regexp "肾移植术后" then 1 else 0 end) as disease_type_117,
	sum(case when disease regexp "肾移植术后复查" then 1 else 0 end) as disease_type_118,
	sum(case when disease regexp "肾透析" then 1 else 0 end) as disease_type_119,
	sum(case when disease regexp "胃炎" then 1 else 0 end) as disease_type_120,
	sum(case when disease regexp "脆性" then 1 else 0 end) as disease_type_121,
	sum(case when disease regexp "脆性糖尿病" then 1 else 0 end) as disease_type_122,
	sum(case when disease regexp "脑供血不足" then 1 else 0 end) as disease_type_123,
	sum(case when disease regexp "脑卒中" then 1 else 0 end) as disease_type_124,
	sum(case when disease regexp "脑梗塞" then 1 else 0 end) as disease_type_125,
	sum(case when disease regexp "脑梗塞偏瘫" then 1 else 0 end) as disease_type_126,
	sum(case when disease regexp "脑梗塞后遗症" then 1 else 0 end) as disease_type_127,
	sum(case when disease regexp "脑梗死" then 1 else 0 end) as disease_type_128,
	sum(case when disease regexp "脑梗死后遗症" then 1 else 0 end) as disease_type_129,
	sum(case when disease regexp "腹膜透析" then 1 else 0 end) as disease_type_130,
	sum(case when disease regexp "血管病变" then 1 else 0 end) as disease_type_131,
	sum(case when disease regexp "血管紧张素转换酶抑制剂不耐受" then 1 else 0 end) as disease_type_132,
	sum(case when disease regexp "血糖不稳定" then 1 else 0 end) as disease_type_133,
	sum(case when (disease regexp "血糖不稳定的糖尿病" or disease regexp "血糖不稳定糖尿病") then 1 else 0 end) as disease_type_134,
	sum(case when disease regexp "视网膜病变" then 1 else 0 end) as disease_type_136,
	sum(case when disease regexp "贫血" then 1 else 0 end) as disease_type_137,
	sum(case when disease regexp "过敏性鼻炎" then 1 else 0 end) as disease_type_138,
	sum(case when disease regexp "重症高血压" then 1 else 0 end) as disease_type_139,
	sum(case when (disease regexp "门特" and disease regexp "门特挂号") then 1 else 0 end) as disease_type_140,
	sum(case when disease regexp "非胰岛素依赖Ⅱ型糖尿病" then 1 else 0 end) as disease_type_142,
	sum(case when disease regexp "骨质疏松" then 1 else 0 end) as disease_type_143,
	sum(case when disease regexp "骨髓抑制" then 1 else 0 end) as disease_type_144,
	sum(case when disease regexp "高粘血症" then 1 else 0 end) as disease_type_145,
	sum(case when disease regexp "高胆固醇血症" then 1 else 0 end) as disease_type_146,
	sum(case when disease regexp "高脂血症" then 1 else 0 end) as disease_type_147,
	sum(case when disease regexp "高血压" then 1 else 0 end) as disease_type_148,
	sum(case when disease regexp "高血压Ⅱ" then 1 else 0 end) as disease_type_149,
	sum(case when disease regexp "高血压Ⅲ" then 1 else 0 end) as disease_type_150,
	sum(case when disease regexp "高血压病" then 1 else 0 end) as disease_type_151,
	sum(case when disease regexp "高血脂" then 1 else 0 end) as disease_type_152,
	sum(case when disease is null then 1 else 0 end) as disease_unknown,           -- 未知的总数
	avg(case when disease is null  then 1 else 0 end) as disease_unknown_known     -- 未知的比例（当全为未知时，其为1，当全为知时，其为0，这样就把，未知与已知标识开来！！）
from df_train group by pid;

---------------------------------------------------------------------------------------------
-- 特征联合
---------------------------------------------------------------------------------------------
drop table if exists feat_train;
create table if not exists feat_train as
select * from feat_items_target_train a
	left outer join feat_tohid_weekday b1 on a.pid = b1.tohid_pid
	left outer join feat_transhid_weekday b2 on a.pid = b2.transhid_pid 
	left outer join feat_statbehavior_train c on a.pid = c.statbehavior_pid 
	left outer join feat_trans_stat_train d on a.pid = d.trans_stat_pid 
	left outer join feat_smstat_train e on a.pid = e.smstat_pid 
	left outer join feat_smitems_train f on a.pid = f.smitems_pid 
	left outer join feat_disease_train g on a.pid = g.disease_pid 
	left outer join feat_tohid_train h on a.pid = h.e_tohid_pid 
	left outer join feat_trans_hid i on a.pid = i.e_transhid_pid
	left outer join feat_itemsfee_train k on a.pid = k.itemsfee_pid; 
	
  